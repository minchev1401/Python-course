# 1. Напишете програма, която чете число n, въведено от потребителя и отпечатва числата
# от 1 до n през 3.

# • Прочетете входните данни от конзолата – едно цяло число n
# • Направете for цикъл от 1 до n (включително) и задайте стъпка 3. Това означава, че при
# всяка итерация на цикъла, променливата i ще увеличава стойността си с 3, вместо с 1.
# Принтирайте променливата при всяка итерация.


print("\nОтпечатване на числата от 1 до 'n' през 3!")

input_num = int(input("Въведете число:\n> "))

for i in range(1, input_num + 1, 3):
    print(i)

    
# 2. Напишете програма, която чете цяло положително число n, въведено от потребителя и
# печата числата от n до 1 в обратен ред. Въведеното число n, винаги ще бъде по-голямо от 1.
# • Прочетете едно цяло число от конзолата – броят на числата, които предстои да бъдат
# въведени
# • Направете for цикъл от n до 0, като намалявате променливата i с 1 при всяка итерация и
# я принтирате.


print("\nБроене от 'n' до 0 - низходящ ред!")

n = int(input("Въведете число:\n> "))

for i in range(n, 0, -1):
    print(i)
    

# 3. Напишете програма, която чете текст (стринг),
# въведен от потребителя и печата всеки символ от
# текста на отделен ред.
# !!! За да итерира for цикълът през въведената дума на
# мястото на фунцията range(), използвайте директно
# променливата, в която преди това сте записали входа
# от конзолата


print("\nВсеки символ на отделен ред!")

input_str = str(input("Въведете текст:\n> "))

for x in input_str:
    print(x)
  # print(x, end= " ")


# 4. Напишете програма, която отпечатва числата в диапазона
# от 1 до 1000, които завършват на 7.
# 
# • Едно число завършва на 7, когато резултатът от модулното деление на числото и 10 е
# равен на 7
# • Направете for цикъл от 1 до 1000 и проверете за всяко число дали завършва на 7.
# Изпълнилите условието числа принтирайте на конзолата
# • Можете да използвате и цикъл със стъпка 10

# 4.1

print("\nЧислата завършващи на 7 от 1 до 1000")

for x in range(1, 1001):
    if x % 10 == 7:
        print(x)
        
# 4.2

print("\nЧислата завършващи на 7 от 1 до 1000")

for x in range(7, 1000, 10):
    print(x)
    
    
# 5. Да се напише програма, която чете n-на брой цели числа, подадени от потребителя и
# проверява дали сумата от числата на четни позиции е равна на сумата на числата на
# нечетни позиции.

# • Ако сумите са равни да се отпечатат два реда: "Yes" и на нов ред "Sum = " + сумата;
# • Ако сумите не са равни да се отпечат два реда: "No" и на нов ред "Diff = " + разликата.
# Разликата се изчислява по абсолютна стойност.

# 5.1 while loop
print("\nЧетни - Нечетни Сума!")

even_sum = 0
odd_sum = 0
n = int(input("\nКолко числа ще въведете?: "))
i = 1

while i < n + 1:
    number = int(input(f"Въведете {i}-то число: "))
    
    if i % 2 == 0:
        even_sum += number
        i += 1
    else:
        odd_sum += number
        i += 1

if even_sum != odd_sum:
    if even_sum > odd_sum:
        diff = even_sum - odd_sum
    else:
        diff = odd_sum - even_sum
    print(f"No\nDiff = {diff}")
else:
    print(f"Yes\nSum = {even_sum}")
    
    
# 5.2 "for" loop
print("\nЧетни - Нечетни Сума!")

even_sum = 0
odd_sum = 0
n = int(input("\nКолко числа ще въведете?: "))

for i in range(1, n + 1):
    number = int(input(f"Въведете {i}-то число: "))
    
    if i % 2 == 0:
        even_sum += number
    else:
        odd_sum += number

if even_sum != odd_sum:
    if even_sum > odd_sum:
        diff = even_sum - odd_sum
    else:
        diff = odd_sum - even_sum
    print(f"No\nDiff = {diff}")
else:
    print(f"Yes\nSum = {even_sum}")